name: Blob storage 2

on: 
  workflow_dispatch:

env:
  FILENAMEANDPATH: blob-upload-az-cli-1.json
  BLOBSTORAGECONTAINER: test


jobs:
  graphql:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    name: Blob storage
    outputs:
      output1: ${{ steps.org_repos.outputs.data }}    
    steps:
      - uses: actions/checkout@master
      - uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }} # Define secret variable in repository settings as per action documentation
      - name: Get Key Vault Secret
        uses: Azure/get-keyvault-secrets@v1
        with:
          keyvault: "ghkey" # name of key vault in Azure portal
          secrets: 'serviceprincipal,github-blobstorage-connection-string'  # comma separated list of secret keys to fetch from key vault 
        id: azure_keyvault_secrets # ID for secrets that you will reference
      - name: Set date in env
        run: |
          echo "MY_DATE=$(date +"%FT%H%M")" >> $GITHUB_ENV  
          ls -la
      - name: Get GraphQL data - org repos extended - diberry
        id: org_repos_extended
        uses: dfberry/gh-action-graphql@v1.16.2
        with:
          github_personal_access_token: ${{ secrets.PAT }}
          query_type: 'user_repos_extended'
          repoOwnerType: 'user'
          github_org: 'diberry'
          save_to_file: 'true'
          save_to_file_name: ./${{env.TEMPDIR}}/${{env.MY_DATE}}-${{env.FILENAMEANDPATH}}
          rate_limit_delay: 900
          max_page_size: 30      
      - name: Upload artifate
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.MY_DATE}}-${{env.FILENAMEANDPATH}}.json # name of artifact to create
          path: ./${{env.TEMPDIR}}/${{env.MY_DATE}}-${{env.FILENAMEANDPATH}} # name of existing file/dir to add to artiface                 
      # tags aren't supported for hierarchical blob storage yet
      # either upload with tags to non-hier, then process into hier or don't rely on tags for faster fetches
      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob upload --file ./${{env.TEMPDIR}}/${{env.MY_DATE}}-${{env.FILENAMEANDPATH}} --container-name "{{ env.BLOBSTORAGECONTAINER }}" --name "${{env.MY_DATE}}-${{env.FILENAMEANDPATH}}" --connection-string "${{ secrets.BLOB_STORE_CONN_STRING }}" --metadata process=mongo 